---
import BaseLayout from '../../layouts/BaseLayout.astro';
import MainContainer from '../../layouts/MainContainer.astro';
import ArticleCard from '../../components/astro/ArticleCard.astro';
import { TOP_MENU } from '../../utils/share';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const [articles, cheatsheets] = await Promise.all([
    getCollection(TOP_MENU.articles),
    getCollection(TOP_MENU.cheatsheets),
  ]);

  const allTags = [...articles, ...cheatsheets]
    .flatMap(entry => entry.data.tags || [])
    .map(tag => tag.toLowerCase());

  const uniqueTags = Array.from(new Set(allTags));

  return uniqueTags.map(tag => ({
    params: { tag },
  }));
}

const { tag } = Astro.params;
const [articles, cheatsheets] = await Promise.all([
  getCollection(TOP_MENU.articles),
  getCollection(TOP_MENU.cheatsheets),
]);

const allEntries = [...articles, ...cheatsheets];

const filtered = allEntries.filter(entry =>
  (entry.data.tags || []).map(t => t.toLowerCase()).includes(tag.toLowerCase())
);
---

<BaseLayout>
  <MainContainer>
    <h1 class="text-2xl font-bold mb-6">Tagged: {tag}</h1>
    <section class="flex flex-col gap-6">
      {filtered
        .sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime())
        .map(({ data, collection, slug }) => (
          <ArticleCard
            key={slug}
            title={data.title}
            description={data.summary}
            pubDate={data.date}
            collection={collection}
            slug={slug}
          />
        ))}
    </section>
  </MainContainer>
</BaseLayout>

